
create database SoupaStarsTest;

use SoupaStarsTest;

create table if not exists SoupaStarsTest.Post
(PostID int not null auto_increment,
Title varchar(50) not null,
PostYear int not null,
PostMonth varchar(10) not null,
PostDay int not null,
Author varchar(50) not null,
PostBody text(999999) not null,
Category varchar(50) not null,
primary key (PostID) );

Insert into Post (PostID, Title, PostYear, PostMonth, PostDay, Author, PostBody, Category)
	values(1,'How Not to Use Sriracha', 2016, 'November', 21, 'Liam Long', 'Number 1: Ketchup','Cooking Fails');
Insert into Post (PostID, Title, PostYear, PostMonth, PostDay, Author, PostBody, Category)
	values(2,"Use ovenmits, kids", 2016, 'November', 22, 'Chris Bartley', 'Ovens are hot.','Miscellaneous');
Insert into Post (PostID, Title, PostYear, PostMonth, PostDay, Author, PostBody, Category)
	values(3,'Why Pie Is Objectively Better Than Cake', 2016, 'November', 17, 'Matt Drozdz', 'It just is.','Pretentious Pedagogy');
Insert into Post (PostID, Title, PostYear, PostMonth, PostDay, Author, PostBody, Category)
	values(4, 'How the Cinammon Challenge Changed My Life', 2016, 'October', 29, 'Alyssa Rice', 'Cinammon is dangerous.','Food Challenges');
Insert into Post (PostID, Title, PostYear, PostMonth, PostDay, Author, PostBody, Category)
	values(5, "Top 10 Grossest Foods and How They're Made", 2016, 'November', 25, 'Liam Long', 'Number 1: Hotdogs','Investigative Journalism');

create table if not exists SoupaStarsTest.Comments
(CommentID int not null auto_increment,
commentText varchar(200) not null,
userName varchar(50) not null,
email varchar(50),
commentDate varchar(50),
primary key (CommentID));

insert into Comments (CommentID, commentText, userName, email, commentDate)
	values(1, 'I was the first to comment!', 'LiamL', 'liam@gmail.com', 'November 17, 2016');
insert into Comments (CommentID, commentText, userName, email, commentDate)
	values(2, "I'm the second person to comment!", 'ChrisB', 'chris@gmail.com', 'November 17, 2016');
insert into Comments (CommentID, commentText, userName, email, commentDate)
	values(3, "What should I say here?", 'MattD', 'matt@gmail.com', 'November 18, 2016');
insert into Comments (CommentID, commentText, userName, email, commentDate)
	values(4, 'I was the first to comment! Oh wait...', 'AlyssaR', 'alyssa@gmail.com', 'November 20, 2016');

create table if not exists SoupaStarsTest.Tag
(TagID int not null auto_increment,
TagBody varchar(50),
primary key (TagID));

insert into Tag (TagID, TagBody) values (1,"tooManyRs");
insert into Tag (TagID, TagBody) values (2,'isTheStoveOn');
insert into Tag (TagID, TagBody) values (3,"ICan'tFeelMyFingers");
insert into Tag (TagID, TagBody) values (4,'appleStreudel');
insert into Tag (TagID, TagBody) values (5,"'nufSaid");
insert into Tag (TagID, TagBody) values (6,"tryThisAtHome");
insert into Tag (TagID, TagBody) values (7, "clickBait");

create table if not exists SoupaStarsTest.User
(UserID int auto_increment not null,
Username varchar(50) not null,
UserPassword varchar(20) not null,
primary key (UserID));

Insert into User (UserID, Username, UserPassword)
	values(1, 'LiamL', 'password');

create table if not exists SoupaStarsTest.PostComment
(PostID int not null, CommentID int);
alter table PostComment add constraint fk_PostComment_PostID foreign key (PostID) references Post(PostID) ON DELETE CASCADE;
alter table PostComment add constraint fk_PostComment_CommentID foreign key (CommentID) references Comments(CommentID) ON DELETE CASCADE;

Insert into PostComment (PostID, CommentID) values(1,1);
Insert into PostComment (PostID, CommentID) values(1,2);
Insert into PostComment (PostID, CommentID) values(2,3);
Insert into PostComment (PostID, CommentID) values(2,4);

create table if not exists SoupaStarsTest.PostTag
(PostID int not null, TagID int);
alter table PostTag add constraint fk_PostTag_PostID foreign key (PostID) references Post(PostID) ON DELETE CASCADE;
alter table PostTag add constraint fk_PostTag_TagID foreign key (TagID) references Tag(TagID) ON DELETE CASCADE;


insert into PostTag (PostID, TagID) values (1,1);
insert into PostTag (PostID, TagID) values (2,2);
insert into PostTag (PostID, TagID) values (2,3);
insert into PostTag (PostID, TagID) values (3,4);
insert into PostTag (PostID, TagID) values (3,5);
insert into PostTag (PostID, TagID) values (4,6);
insert into PostTag (PostId, TagID) values (5,7);

select * from Post;
select * from PostComment;
select * from PostTag;
select * from Comments;
select * from Tag;
UPDATE `SoupaStarsTest`.`Post` SET `PostMonth`='October', `PostDay`='23' WHERE `PostID`='1';
UPDATE `SoupaStarsTest`.`Post` SET `PostMonth`='October', `PostDay`='29' WHERE `PostID`='2';
UPDATE `SoupaStarsTest`.`Post` SET `PostDay`='8' WHERE `PostID`='3';
UPDATE `SoupaStarsTest`.`Post` SET `PostMonth`='November', `PostDay`='14' WHERE `PostID`='4';
select commentText, userName, email, commentDate from PostComment join Comments using (CommentID) where PostID = 2;
select TagBody from PostTag join Tag using (TagID) where PostID = 2;
select CommentID from PostComment join Comments using (CommentID) where PostID = 1;

Create table if not exists SoupaStarsTest.StaticPage(
PageID int not null auto_increment,
Author varchar(50),
Body text(1000),
ExpirationDate varchar(10),
primary key (PageID)
);

insert into StaticPage (PageID, Author, Body, ExpirationDate)
	values (1,'Liam Long', 'rubarb rubarb rubarb', "01/01/2017");
insert into StaticPage (PageID, Author, Body, ExpirationDate)
	values (2,'Chris Bartley', 'Duck, Duck, Samuel L Jackson', "N/A");

CREATE TABLE IF NOT EXISTS `users` (
 `user_id` int(11) NOT NULL AUTO_INCREMENT,
 `username` varchar(20) NOT NULL,
 `password` varchar(500) NOT NULL,
 `enabled` tinyint(1) NOT NULL,
 PRIMARY KEY (`user_id`),
 KEY `username` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;
--
-- Dumping data for table `users`
--
INSERT INTO `users` (`user_id`, `username`, `password`, `enabled`) VALUES
(1, 'admin', 'adminpassword', 1),
(2, 'visitor', 'visitorpassword', 1);
--
-- Table structure for table `authorities`
--
CREATE TABLE IF NOT EXISTS `authorities` (
 `username` varchar(20) NOT NULL,
 `authority` varchar(20) NOT NULL,
 KEY `username` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `authorities`
--
INSERT INTO `authorities` (`username`, `authority`) VALUES
('admin', 'ROLE_ADMIN'),
('admin', 'ROLE_USER'),
('visitor', 'ROLE_USER');
--
-- Constraints for table `authorities`
--
ALTER TABLE `authorities`
ADD CONSTRAINT `authorities_ibfk_1` FOREIGN KEY (`username`) REFERENCES `users` (`username`);

alter table StaticPage add column Title varchar(100)after Author;
select * from StaticPage;

CREATE TABLE IF NOT EXISTS `posts_tags`(
`PostID` int(11) NOT NULL,
 `TagID` int(11) NOT NULL,
 KEY `PostID` (`PostID`),
 KEY `TagID` (`TagID`)
);